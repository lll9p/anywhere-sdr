use pest::Parser;
use rinex::{error::Error, rule::*};
#[test]
fn rinex_parser() -> Result<(), Error> {
    let _ = RinexParser::parse(Rule::rinex, RINEX_DATA).map_err(Box::new)?;
    Ok(())
}
#[test]
fn rinex_read() -> Result<(), Error> {
    let _ = Rinex::read_string(RINEX_DATA)?;
    Ok(())
}
#[test]
fn rinex_file_read() -> Result<(), Error> {
    let fname = r"C:\Users\lll9p\World\Repositories\Apps\anywhere-sdr\crates\gps\resources\brdc0010.22n";
    let content = std::fs::read_to_string(fname)?;
    let data = Rinex::read_string(&content)?;
    println!("len: {}", data.ephemerides.len());
    println!("toc {:#?}", data.delta_utc);
    println!("{:#?}", data.ephemerides[0]);
    Ok(())
}
const RINEX_DATA: &str = r"     2              NAVIGATION DATA                         RINEX VERSION / TYPE
CCRINEXN V1.6.0 UX  CDDIS               02-JUN-24 23:31     PGM / RUN BY / DATE
IGS BROADCAST EPHEMERIS FILE                                COMMENT
    0.2142D-07  0.2235D-07 -0.1192D-06 -0.5960D-07          ION ALPHA
    0.1290D+06  0.1311D+06 -0.1966D+06 -0.6554D+05          ION BETA
   -0.186264514923D-08-0.621724893790D-14   147456     2317 DELTA-UTC: A0,A1,T,W
    18                                                      LEAP SECONDS
                                                            END OF HEADER
 1 24  6  1  0  0  0.0 0.266515184194D-03-0.557065504836D-11 0.000000000000D+00
    0.390000000000D+02 0.776562500000D+02 0.585881547175D-08 0.301270077574D+01
    0.397302210331D-05 0.133835959714D-01 0.659003853798D-05 0.515376377487D+04
    0.518400000000D+06 0.109896063805D-06-0.590134072653D-01-0.540167093277D-07
    0.954779198592D+00 0.248281250000D+03 0.103214963985D+01-0.799497587998D-08
    0.231081054025D-09 0.100000000000D+01 0.231600000000D+04 0.000000000000D+00
    0.280000000000D+01 0.630000000000D+02-0.195577740669D-07 0.390000000000D+02
    0.511218000000D+06 0.400000000000D+01 0.000000000000D+00 0.000000000000D+00
 2 24  6  1  0  0  0.0-0.426051672548D-03 0.693489710102D-11 0.000000000000D+00
    0.700000000000D+02-0.209375000000D+02 0.418195990970D-08 0.179651312739D+01
   -0.116601586342D-05 0.159754690248D-01 0.102054327726D-04 0.515370455933D+04
    0.518400000000D+06 0.333413481712D-06 0.193527801553D+01-0.577419996262D-07
    0.967200619491D+00 0.183250000000D+03-0.118193471767D+01-0.775818030221D-08
   -0.120719314158D-09 0.100000000000D+01 0.231600000000D+04 0.000000000000D+00
    0.200000000000D+01 0.000000000000D+00-0.176951289177D-07 0.700000000000D+02
    0.511218000000D+06 0.400000000000D+01 0.000000000000D+00 0.000000000000D+00
 3 24  6  1  0  0  0.0 0.391644891352D-03 0.185309545486D-10 0.000000000000D+00
    0.270000000000D+02 0.283437500000D+02 0.432803742299D-08-0.173927737918D+01
    0.154227018356D-05 0.554066104814D-02 0.657327473164D-05 0.515371541596D+04
    0.518400000000D+06 0.109896063805D-06 0.306992990279D+01-0.931322574616D-08
    0.984786192412D+00 0.265687500000D+03 0.109095120048D+01-0.797997525514D-08
    0.477877048354D-09 0.100000000000D+01 0.231600000000D+04 0.000000000000D+00
    0.200000000000D+01 0.000000000000D+00 0.139698386192D-08 0.270000000000D+02
    0.511218000000D+06 0.400000000000D+01 0.000000000000D+00 0.000000000000D+00

    ";
